{"laborator_custom_css":"body{\r\n\tbackground: #eee !important;\r\n}\r\n\r\nheader.site-header .header-widgets .cart-counter svg {\r\n\tfill: #fff;\r\n}\r\n\r\nheader.site-header ul.nav li a, header.site-header div.nav>ul li a {\r\n\tfont-style: italic !important;\r\n\tfont-weight:400 !important;\r\n}\r\n\r\nheader.site-header {\r\n\tbox-shadow: none !important;\r\n\tbackground: #154a87 url(\"http:\/\/themes.laborator.co\/aurum\/tech\/wp-content\/uploads\/2014\/11\/map.png\") no-repeat 5% 50% !important;\r\n}\r\n\/*\r\nheader.site-header .full-menu .container {\r\n\tbackground-color: #154a87 !important;\r\n}\r\n*\/\r\n\r\n.page-template-contact-php {\r\n\tbackground: #FFF !important;\r\n}\r\n\r\nheader.site-header ul.nav li a, header.site-header div.nav>ul li a {\r\n\tcolor: #FFF !important;\r\n}\r\n\r\n.shop .container {\r\n\tpadding: 15px 60px !important;\r\n\tbackground: #FFF !important;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n\t.shop .container {\r\n    \tpadding: 15px 15px !important;\r\n\t}\r\n}\r\n\r\n.header-links {\r\n\tborder:none !important;\r\n\tpadding: 30px 0 !important;\r\n}\r\n\r\nheader.site-header ul.nav>li>a:after, header.site-header div.nav>ul>li>a:after {\r\n\tbackground: #FFF !important;\r\n}\r\n\r\nheader.site-header .full-menu {\r\n\tborder: none !important;\r\n}\r\n\r\nheader.site-header ul.nav>li:hover>a, header.site-header div.nav>ul>li:hover>a, .nav>li>a:hover, .nav>li>a:focus {\r\n\tbackground: #ff9600 !important;\r\n}\r\n\r\nheader.mobile-menu .mobile-logo {\r\n\tbackground: #154a87 url(\"http:\/\/themes.laborator.co\/aurum\/tech\/wp-content\/uploads\/2014\/11\/map.png\") no-repeat 5% 50% !important;\r\n}\r\n\r\n.products .shop-item {\r\n\tborder: 1px solid #EEE !important;\r\n\tbox-shadow: 0px 1px 1px rgba(0,0,0,0.05);\r\n\tbackground: #FFF;\r\n}\r\n\r\n.products .shop-item:hover {\r\n\tbox-shadow: 0px 2px 6px rgba(0,0,0,0.09);\r\n}\r\n\r\n.shop .shop-item .item-info .price span {\r\n\tfont-weight: 600 !important;\r\n\tfont-style: italic !important;\r\n\tcolor: #ff9600 !important;\r\n\tfont-size: 18px;\r\n}\r\n\r\n.shop .shop-item .item-info {\r\n\tpadding: 20px 25px !important\r\n}\r\n\r\n.shop .shop-item .item-image {\r\n\tpadding: 20px !important;\r\n}\r\n\r\n.shop .shop-item .onsale {\r\n\tbackground: #ff9600 !important;\r\n\tfont-style: italic;\r\n}\r\n\r\n.page-container .products .shop-item {\r\n\tmargin-bottom: 0px !important;\r\n\tborder: none !important;\r\n}\r\n\r\n.single-product .type-product {\r\n\tpadding: 40px 0 !important;\r\n}\r\n\r\n.site-footer {\r\n\tbackground: #fff;\r\n}\r\n\r\n.page-container .wpb_content_element.lab_wpb_products_carousel .products .product {\r\n\tbackground: #FFF !important;\r\n}\r\n\r\nnav.nav-growpop a:hover .icon-wrap {\r\n\tbackground-color: #154a87 !important;\r\n\tborder-color: #154a87 !important;\r\n}\r\n\r\nheader.mobile-menu .mobile-logo {\r\n\tborder: none !important;\r\n}\r\n\r\nfooter.site-footer.inverted .footer-widgets .sidebar ul li a {\r\n\tcolor: #8DA5C0 !important;\r\n}\r\n\r\nfooter.site-footer.inverted {\r\n\tcolor: #FFF !important;\r\n\tbackground: #154a87 !important;\r\n} \r\n\r\nfooter.site-footer.inverted .social-networks li a {\r\n\tbackground: #163E6C !important;\r\n}\r\n\r\nfooter.site-footer.inverted .footer-bottom {\r\n\tborder-color: #2F639E !important;\r\n}\r\n\r\n.page-container .wpb_content_element.lab_wpb_products_carousel .owl-buttons .owl-prev, .page-container .wpb_content_element.lab_wpb_products_carousel .owl-buttons .owl-next {\r\n\tbackground-color: #ff9700 !important;\r\n}\r\n\r\n.contact-page .contact-information .social-networks li a i {\r\n    color: #888 !important;\r\n}","laborator_custom_css_lg":"","laborator_custom_css_md":"","laborator_custom_css_sm":"","laborator_custom_css_less":"@my-var: #ccc;\n@my-other-var: #fff;\n\n.any-container {\n\t.nested-container {\n\t\tcolor: @my-var;\n\t}\n}","laborator_custom_css_sass":"$color: #abc;\n\ndiv.example-el {\n\tcolor: lighten($color, 20%);\n}"}